apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: rekors.rhtas.redhat.com
spec:
  group: rhtas.redhat.com
  names:
    kind: Rekor
    listKind: RekorList
    plural: rekors
    singular: rekor
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The component status
      jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Status
      type: string
    - description: The component url
      jsonPath: .status.url
      name: URL
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Rekor is the Schema for the rekors API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RekorSpec defines the desired state of Rekor
            properties:
              backFillRedis:
                description: BackFillRedis CronJob Configuration
                properties:
                  enabled:
                    default: true
                    description: Enable the BackFillRedis CronJob
                    type: boolean
                  schedule:
                    default: 0 0 * * *
                    description: Schedule for the BackFillRedis CronJob
                    type: string
                type: object
              externalAccess:
                description: Define whether you want to export service or not
                properties:
                  enabled:
                    description: If set to true, the Operator will create an Ingress
                      or a Route resource. For the plain Ingress there is no TLS configuration
                      provided Route object uses "edge" termination by default.
                    type: boolean
                  host:
                    description: Set hostname for your Ingress/Route.
                    type: string
                type: object
              monitoring:
                description: Enable Service monitors for rekor
                properties:
                  enabled:
                    description: If true, the Operator will create monitoring resources
                    type: boolean
                type: object
              pvcName:
                description: Persistent volume claim name to bound with Rekor component
                type: string
              rekorSearchUI:
                description: Rekor Search UI
                properties:
                  enabled:
                    description: Enable RekorSearchUI deployment
                    type: boolean
                type: object
              signer:
                description: Signer configuration
                properties:
                  keyRef:
                    description: Reference to signer private key
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  kms:
                    default: secret
                    description: KMS Signer provider. Valid options are secret, memory
                      or any supported KMS provider defined by go-cloud style URI
                    type: string
                  passwordRef:
                    description: Password to decrypt signer private key
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              treeID:
                format: int64
                type: integer
            type: object
          status:
            description: RekorStatus defines the observed state of Rekor
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              rekorSearchUIUrl:
                type: string
              url:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
