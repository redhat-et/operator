---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: securesigns.rhtas.redhat.com
spec:
  group: rhtas.redhat.com
  names:
    kind: Securesign
    listKind: SecuresignList
    plural: securesigns
    singular: securesign
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Deployment status
      jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Status
      type: string
    - description: The rekor url
      jsonPath: .status.rekor.url
      name: Rekor URL
      type: string
    - description: The fulcio url
      jsonPath: .status.fulcio.url
      name: Fulcio URL
      type: string
    - description: The tuf url
      jsonPath: .status.tuf.url
      name: Tuf URL
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Securesign is the Schema for the securesigns API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecuresignSpec defines the desired state of Securesign
            properties:
              ctlog:
                description: CTlogSpec defines the desired state of CTlog component
                properties:
                  privateKeyPasswordRef:
                    description: Password to decrypt private key
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  privateKeyRef:
                    description: The private key used for signing STHs etc.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  publicKeyRef:
                    description: The public key matching the private key (if both
                      are present). It is used only by mirror logs for verifying the
                      source log's signatures, but can be specified for regular logs
                      as well for the convenience of test tools.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  rootCertificates:
                    description: List of secrets containing root certificates that
                      are acceptable to the log. The certs are served through get-roots
                      endpoint. Optional in mirrors.
                    items:
                      description: SecretKeySelector selects a key of a Secret.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  treeID:
                    description: The ID of a Trillian tree that stores the log data.
                    format: int64
                    type: integer
                type: object
              fulcio:
                description: FulcioSpec defines the desired state of Fulcio
                properties:
                  certificate:
                    description: Certificate configuration
                    properties:
                      caRef:
                        description: Reference to CA certificate
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      commonName:
                        type: string
                      organizationEmail:
                        type: string
                      organizationName:
                        type: string
                      privateKeyPasswordRef:
                        description: Reference to password to encrypt CA private key
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      privateKeyRef:
                        description: Reference to CA private key
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  config:
                    properties:
                      MetaIssuers:
                        additionalProperties:
                          properties:
                            ChallengeClaim:
                              description: Optional, the challenge claim expected
                                for the issuer Set if using a custom issuer
                              type: string
                            ClientID:
                              description: The expected client ID of the OIDC token
                              type: string
                            IssuerClaim:
                              description: Optional, if the issuer is in a different
                                claim in the OIDC token
                              type: string
                            IssuerURL:
                              description: The expected issuer of an OIDC token
                              type: string
                            SPIFFETrustDomain:
                              description: SPIFFETrustDomain specifies the trust domain
                                that 'spiffe' issuer types issue ID tokens for. Tokens
                                with a different trust domain will be rejected.
                              type: string
                            SubjectDomain:
                              description: The domain that must be present in the
                                subject for 'uri' issuer types Also used to create
                                an email for 'username' issuer types
                              type: string
                            Type:
                              description: Used to determine the subject of the certificate
                                and if additional certificate values are needed
                              type: string
                          required:
                          - ClientID
                          - Type
                          type: object
                        description: 'A meta issuer has a templated URL of the form:
                          https://oidc.eks.*.amazonaws.com/id/* Where * can match
                          a single hostname or URI path parts (in particular, no ''.''
                          or ''/'' are permitted, among other special characters)  Some
                          examples we want to match: * https://oidc.eks.us-west-2.amazonaws.com/id/B02C93B6A2D30341AD01E1B6D48164CB
                          * https://container.googleapis.com/v1/projects/mattmoor-credit/locations/us-west1-b/clusters/tenant-cluster'
                        type: object
                      OIDCIssuers:
                        additionalProperties:
                          properties:
                            ChallengeClaim:
                              description: Optional, the challenge claim expected
                                for the issuer Set if using a custom issuer
                              type: string
                            ClientID:
                              description: The expected client ID of the OIDC token
                              type: string
                            IssuerClaim:
                              description: Optional, if the issuer is in a different
                                claim in the OIDC token
                              type: string
                            IssuerURL:
                              description: The expected issuer of an OIDC token
                              type: string
                            SPIFFETrustDomain:
                              description: SPIFFETrustDomain specifies the trust domain
                                that 'spiffe' issuer types issue ID tokens for. Tokens
                                with a different trust domain will be rejected.
                              type: string
                            SubjectDomain:
                              description: The domain that must be present in the
                                subject for 'uri' issuer types Also used to create
                                an email for 'username' issuer types
                              type: string
                            Type:
                              description: Used to determine the subject of the certificate
                                and if additional certificate values are needed
                              type: string
                          required:
                          - ClientID
                          - Type
                          type: object
                        type: object
                    type: object
                  externalAccess:
                    description: Define whether you want to export service or not
                    properties:
                      enabled:
                        description: If set to true, the Operator will create an Ingress
                          or a Route resource. For the plain Ingress there is no TLS
                          configuration provided Route object uses "edge" termination
                          by default.
                        type: boolean
                      host:
                        description: Set hostname for your Ingress/Route.
                        type: string
                    type: object
                  monitoring:
                    description: Enable Service monitors for fulcio
                    properties:
                      enabled:
                        description: If true, the Operator will create monitoring
                          resources
                        type: boolean
                    type: object
                required:
                - config
                type: object
              rekor:
                description: RekorSpec defines the desired state of Rekor
                properties:
                  backFillRedis:
                    description: BackFillRedis CronJob Configuration
                    properties:
                      enabled:
                        default: true
                        description: Enable the BackFillRedis CronJob
                        type: boolean
                      schedule:
                        default: 0 0 * * *
                        description: Schedule for the BackFillRedis CronJob
                        type: string
                    type: object
                  externalAccess:
                    description: Define whether you want to export service or not
                    properties:
                      enabled:
                        description: If set to true, the Operator will create an Ingress
                          or a Route resource. For the plain Ingress there is no TLS
                          configuration provided Route object uses "edge" termination
                          by default.
                        type: boolean
                      host:
                        description: Set hostname for your Ingress/Route.
                        type: string
                    type: object
                  monitoring:
                    description: Enable Service monitors for rekor
                    properties:
                      enabled:
                        description: If true, the Operator will create monitoring
                          resources
                        type: boolean
                    type: object
                  pvc:
                    default:
                      retain: true
                      size: 5Gi
                    description: PVC configuration
                    properties:
                      name:
                        description: Name of the PVC
                        type: string
                      retain:
                        default: true
                        description: Retain policy for the PVC
                        type: boolean
                      size:
                        default: 5Gi
                        description: Size of the PVC
                        type: string
                      storageClass:
                        description: Storage class for the PVC
                        type: string
                    required:
                    - retain
                    type: object
                  rekorSearchUI:
                    description: Rekor Search UI
                    properties:
                      enabled:
                        description: Enable RekorSearchUI deployment
                        type: boolean
                    type: object
                  signer:
                    description: Signer configuration
                    properties:
                      keyRef:
                        description: Reference to signer private key
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      kms:
                        default: secret
                        description: KMS Signer provider. Valid options are secret,
                          memory or any supported KMS provider defined by go-cloud
                          style URI
                        type: string
                      passwordRef:
                        description: Password to decrypt signer private key
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  treeID:
                    format: int64
                    type: integer
                type: object
              trillian:
                description: TrillianSpec defines the desired state of Trillian
                properties:
                  database:
                    description: Define your database connection
                    properties:
                      create:
                        default: false
                        description: Create Database if a database is not created
                          one must be defined using the DatabaseSecret field
                        type: boolean
                      databaseSecretRef:
                        description: 'Secret with values to be used to connect to
                          an existing DB or to be used with the creation of a new
                          DB mysql-host: The host of the MySQL server mysql-port:
                          The port of the MySQL server mysql-user: The user to connect
                          to the MySQL server mysql-password: The password to connect
                          to the MySQL server mysql-database: The database to connect
                          to'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      pvc:
                        default:
                          retain: true
                          size: 5Gi
                        description: PVC configuration
                        properties:
                          name:
                            description: Name of the PVC
                            type: string
                          retain:
                            default: true
                            description: Retain policy for the PVC
                            type: boolean
                          size:
                            default: 5Gi
                            description: Size of the PVC
                            type: string
                          storageClass:
                            description: Storage class for the PVC
                            type: string
                        required:
                        - retain
                        type: object
                    required:
                    - create
                    type: object
                type: object
              tuf:
                default:
                  keys:
                  - name: rekor.pub
                  - name: ctfe.pub
                  - name: fulcio_v1.crt.pem
                description: TufSpec defines the desired state of Tuf
                properties:
                  externalAccess:
                    description: Define whether you want to export service or not
                    properties:
                      enabled:
                        description: If set to true, the Operator will create an Ingress
                          or a Route resource. For the plain Ingress there is no TLS
                          configuration provided Route object uses "edge" termination
                          by default.
                        type: boolean
                      host:
                        description: Set hostname for your Ingress/Route.
                        type: string
                    type: object
                  keys:
                    default:
                    - name: rekor.pub
                    - name: ctfe.pub
                    - name: fulcio_v1.crt.pem
                    items:
                      properties:
                        name:
                          type: string
                        secretRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - name
                      type: object
                    type: array
                  port:
                    default: 80
                    format: int32
                    type: integer
                type: object
            type: object
          status:
            description: SecuresignStatus defines the observed state of Securesign
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              fulcio:
                properties:
                  url:
                    type: string
                type: object
              rekor:
                properties:
                  url:
                    type: string
                type: object
              tuf:
                properties:
                  url:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
